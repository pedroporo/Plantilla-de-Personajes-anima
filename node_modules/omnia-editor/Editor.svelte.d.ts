import { SvelteComponentTyped } from "svelte";
import { Editor, FocusPosition } from '@tiptap/core';
declare const __propDef: {
    props: {
        /**
             * Initial value of the content.
             */ value?: string;
        /**
             * TipTap instance of the Editor.
             */ editor?: Editor;
        /**
             * Use spellcheck.
             */ spellcheck?: boolean;
        /**
             * Get the document as JSON.
             */ getJSON?: () => import("@tiptap/core").JSONContent;
        /**
             * Get the document as HTML.
             */ getHTML?: () => string;
        /**
             * Get the number of characters for the current document.
             */ getCharacterCount?: () => number;
        /**
             * Returns `true` when Editor is focused.
             */ isFocused?: () => boolean;
        /**
             * Returns `true` if there is no content.
             */ isEmpty?: () => boolean;
        /**
             * Removes focus from the editor.
             */ blur?: () => boolean;
        /**
             * Focus the editor at the given position.
             *
             * @param position
             * Set the focus to the editor
             * focus()
             *
             * Set the cursor to the first position
             * focus('start')
             *
             * Set the cursor to the last position
             * focus('end')
             *
             * Selects the whole document
             * focus('all')
             *
             * Set the cursor to position 10
             * focus(10)
             */ focus?: (position?: FocusPosition) => boolean;
        /**
             * Undo recent changes.
             */ undo?: () => boolean;
        /**
             * Reapply reverted changes
             */ redo?: () => boolean;
        /**
             * Destroy the editor.
             */ destroy?: () => void;
    };
    events: {
        init: CustomEvent<any>;
        focus: CustomEvent<any>;
        blur: CustomEvent<any>;
        change: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type EditorProps = typeof __propDef.props;
export declare type EditorEvents = typeof __propDef.events;
export declare type EditorSlots = typeof __propDef.slots;
export default class Editor extends SvelteComponentTyped<EditorProps, EditorEvents, EditorSlots> {
    get getJSON(): () => import("@tiptap/core").JSONContent;
    get getHTML(): () => string;
    get getCharacterCount(): () => number;
    get isFocused(): () => boolean;
    get isEmpty(): () => boolean;
    get blur(): () => boolean;
    get focus(): (position?: FocusPosition) => boolean;
    get undo(): () => boolean;
    get redo(): () => boolean;
    get destroy(): () => void;
}
export {};
